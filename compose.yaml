networks:
    dcp:
        name: dcp
        external: true

services:
  api-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
          - APP_NAME=APIService
    image: api-service:latest
    container_name: api-service
    ports:
        - "8080:8080"
    environment:
        - PORT=${PORT}
        - DB_HOST=${DB_HOST}
        - DB_PORT=${DB_PORT}
        - DB_NAME=${DB_NAME}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    env_file:
        - .env
    networks:
        - dcp

  # The below two services are for testing purposes only
  # They are required to test the application in a CI environment

  db:
    image: postgres:latest
    environment:
        POSTGRES_DB: testdb
        POSTGRES_USER: ${DB_USERNAME}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
        - "5432:5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
        - .env

  github-action-maven-test:
    build:
        context: .
        dockerfile: .github/workflows/Dockerfile
    depends_on:
        - db
    environment:
        - DB_HOST=db
        - DB_PORT=5432
        - DB_NAME=testdb
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    env_file:
        - .env
    command: ["mvn", "test", "-Dspring.profiles.active=test"]

volumes:
    postgres_data:
